from aiogram import Router, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart
from aiogram.enums import ParseMode
from aiogram_dialog import DialogManager, StartMode

from handlers.apsched import send_message_cron
from services.horoscope import get_horoscope
from services.weather import get_weather_data
from services.exchange_rate import get_exchange_rate
from services.joke import get_joke
from keyboards.inline_kb import start_keyboard
from models.dbconnect import Request
from states.statesform import StartSG

router = Router()

''' 3 –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –≤–µ–¥—É—Ç —Å–µ–±—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É, –∞–ª–µ—Ä—Ç—ã, —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –Ω–∞ 2-3 —Å–µ–∫ –æ–∫–Ω–æ'''


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def process_start_command(message: Message, bot: Bot, request: Request, state: FSMContext):
    await request.add_data(message.from_user.id, message.from_user.first_name)  # –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç —Å—Ç–∞—Ä—Ç –µ–≥–æ –∏–º—è –∏ id –∑–∞–Ω–æ—Å—è—Ç—Å—è –≤ –±–¥
    await state.clear()
    await message.answer(text='–ü—Ä–∏–≤–µ—Ç! –í –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –Ω–∞–∂–º–∏ "–∏–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏", '
                              '—á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—É—é –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ! '
                              '–ù—É –∞ —Å–µ–π—á–∞—Å –º–æ–≥—É –≤–æ—Ç —á—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å üëá ',
                         reply_markup=start_keyboard)


# @router.message(Command(commands='get_weather'))  # —ç—Ç–∞ —Ö—Ä–µ–Ω—å —Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ —Ä—É–∫–∞–º–∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å /get_weather
@router.callback_query(F.data == 'weather')  # —Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–æ–π  callback == weather
async def send_weather(callback: CallbackQuery):
    weather_data = get_weather_data()
    await callback.answer(weather_data)


# @router.message(Command(commands='get_exchange_rate'))
@router.callback_query(F.data == 'exchange')  # —Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–æ–π  callback == exchange
async def send_rate(callback: CallbackQuery):
    exchange_rate = get_exchange_rate()
    await callback.answer(exchange_rate, show_alert=True)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /smile_me
# @router.message(Command(commands='smile_me'))
@router.callback_query(F.data == 'joke')  # —Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–æ–π  callback == joke
async def send_joke(callback: CallbackQuery):
    joke = get_joke()
    await callback.message.answer(joke, ParseMode.HTML)

@router.callback_query(F.data == 'horoscope')  # —Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–æ–π  callback == horoscope
async def send_horoscope(callback: CallbackQuery, request: Request):
    horo = await request.get_goro_db(callback.from_user.id)  # –¥–æ—Å—Ç–∞–Ω–µ–º –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–Ω–∞–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        res = get_horoscope(horo[0]['horoscope'])  # —Å–º–æ—Ç—Ä–∏ dbconnect, –≤—ã–¥–∞–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
        await callback.message.answer(res, ParseMode.HTML)
    except Exception:
        await callback.message.answer('–¢—ã –Ω–µ –≤—ã–±—Ä–∞–ª —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞.\n'
                                      '–ó–∞–π–¥–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∏ –Ω–∞–∂–º–∏ "–ò–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏"')


'''–¢—É—Ç –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥, –ª–∏–±–æ —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞, –ª–∏–±–æ –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥ –≤—Ä—É—á–Ω—É—é'''

@router.message(Command(commands='get_weather'))  # —ç—Ç–∞ —Ö—Ä–µ–Ω—å —Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ —Ä—É–∫–∞–º–∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å /get_weather
async def send_weather(message: Message):
    weather_data = get_weather_data()
    await message.answer(weather_data, ParseMode.HTML)


@router.message(Command(commands='get_exchange_rate'))
async def send_rate(message: Message):
    exchange_rate = get_exchange_rate()
    await message.answer(exchange_rate, show_alert=True)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /smile_me
@router.message(Command(commands='smile_me'))
async def send_joke(message: Message):
    joke = get_joke()
    await message.answer(joke, ParseMode.HTML)


@router.message(Command(commands='get_horoscope'))  # —Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–æ–π  callback == horoscope
async def send_horoscope(message: Message, request: Request):
    horo = await request.get_goro_db(message.from_user.id)  # –¥–æ—Å—Ç–∞–Ω–µ–º –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–Ω–∞–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        res = get_horoscope(horo[0]['horoscope'])  # —Å–º–æ—Ç—Ä–∏ dbconnect, –≤—ã–¥–∞–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
        await message.answer(res, ParseMode.HTML)
    except Exception:
        await message.answer('–¢—ã –Ω–µ –≤—ã–±—Ä–∞–ª —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞.\n'
                                      '–ó–∞–π–¥–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∏ –Ω–∞–∂–º–∏ "–ò–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏"')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ "voice", "video" –∏–ª–∏ "text"
@router.message(F.content_type.in_({'voice', 'video', 'text'}))
async def process_send_vovite(message: Message):
    await message.answer(text='–î–∞–≤–∞–π –æ–±—â–∞—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é...\n'
                              '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –º–æ–π –ª–µ–Ω–∏–≤—ã–π –∏ —Å–∏–ª—å–Ω–æ —Å–æ –º–Ω–æ–π –Ω–µ –∑–∞–º–æ—Ä–∞—á–∏–≤–∞–ª—Å—è üò¢')